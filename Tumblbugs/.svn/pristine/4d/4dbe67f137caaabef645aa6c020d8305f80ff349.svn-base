package com.tumblbugs.dao;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.tumblbugs.vo.FundingGiftVO;
import com.tumblbugs.vo.FundingVO;

@Repository
public class FundingDAO {
	
	@Autowired
	private SqlSessionTemplate sqlSession;
	private static String namespace = "mapper.funding";
	
	public ArrayList<FundingVO> getFundingList(String email) {
		List list = sqlSession.selectList(namespace + ".fundingList", email);
		return (ArrayList<FundingVO>)list;
	}
	
	public Map getFundingCount(String email) {
		Map map = new HashMap();
		
		return map;
	}
	
	public boolean fundingInsert(FundingVO vo) {
		boolean result = false;
		
		if(sqlSession.insert(namespace + ".fundingInsert", vo) != 0) {
			int insertCount = 0;
			
			for(FundingGiftVO fgvo:vo.getGiftList()) {
				String funding_id = getFundingId(vo.getEmail());
				fgvo.setFunding_id(funding_id);
				insertCount += fundingGiftInsert(fgvo);
			}
			
			if(insertCount == vo.getGiftList().size()) {
				result = true;
			}
		}
		
		return result;
	}
	
	public String getFundingId(String email) {
		return sqlSession.selectOne(namespace + ".fundingId", email);
	}
	
	public int fundingGiftInsert(FundingGiftVO vo) {
		return sqlSession.insert(namespace + ".fundingGiftInsert", vo);
	}
	
	public FundingVO getRecentDeliveryInfo(String email) {
		return sqlSession.selectOne(namespace + ".recentDeliveryInfo", email);
	}
}
