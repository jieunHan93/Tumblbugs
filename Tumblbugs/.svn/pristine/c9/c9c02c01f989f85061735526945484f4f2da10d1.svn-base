package com.tumblbugs.dao;

import java.util.HashMap;
import java.util.Map;

import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.tumblbugs.vo.ProjectVO;

@Repository
public class PJUploadDAO {
	@Autowired
	private SqlSessionTemplate sqlSession; 
	/***/
	private static String namespace = "mapper.upload";
	
	public boolean resultUpdateinput(String pj_id, String pj_colname, String pj_val) {
		boolean result = false;
		Map<String, String> param = new HashMap<String, String>();
		param.put("pj_id", pj_id);
		param.put("pj_colname", pj_colname);
		param.put("pj_val", pj_val);
		
		int val = sqlSession.update(namespace+".update_input", param);
		if( val != 0) result = true;
		
		return result;
	}
	
	public boolean resultUpdateTitle(String pj_id, String pj_title, String pj_stitle) {
		boolean result = false;
		Map<String, String> param = new HashMap<String, String>();
		param.put("pj_id", pj_id);
		param.put("pj_title", pj_title);
		param.put("pj_stitle", pj_stitle);
		
		int val = sqlSession.update(namespace+".update_title", param);
		if( val != 0) result = true;
		
		return result;
	}
	
	public String resultAddProject() {
		String pj_id ="";
		int val = sqlSession.insert(namespace+".add_project");
		
		if(val != 0) {
			pj_id = sqlSession.selectOne(namespace+".get_pj_id");
		}
		
		return pj_id;
	}
	
	public ProjectVO getProjectContent(String pj_id) {
		ProjectVO vo = new ProjectVO();
		
		vo = sqlSession.selectOne(namespace+".get_pj_content", pj_id);
		
		return vo;
	}
}
