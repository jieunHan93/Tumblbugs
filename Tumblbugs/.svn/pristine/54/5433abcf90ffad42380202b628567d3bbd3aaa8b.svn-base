package com.tumblbugs.controller;

import java.util.ArrayList;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.tumblbugs.dao.FundingDAO;
import com.tumblbugs.dao.MyProjectDAO;
import com.tumblbugs.dao.MypageDAO;
import com.tumblbugs.dao.ProjectDAO;
import com.tumblbugs.vo.MemberVO;
import com.tumblbugs.vo.PaymentVO;
import com.tumblbugs.vo.ProjectVO;

@Controller
public class MypageController {
	@Autowired
	MypageDAO mypagedao;
	
	@Autowired
	private FundingDAO fundingDAO;
	@Autowired
	private MyProjectDAO mypjDAO;
	@Autowired
	private ProjectDAO projectDAO;
	
	@RequestMapping(value="/mypage/profile", method=RequestMethod.GET)
	public String profil() {
		return "/mypage/profile_update";
	}
	
	@RequestMapping(value="/profile_proc", method=RequestMethod.POST)
	public String profile_proc(MemberVO vo) {
		
		ModelAndView mv = new ModelAndView();
		mypagedao.getupdate_profile(vo);
		mv.setViewName("/profile_proc");
		return "/index";
	}
	
	@ResponseBody	
	@RequestMapping(value="/mypage/select_profile_pass", method=RequestMethod.GET)
	public String select_profile_pass(String pass) {
		System.out.println("pass="+pass);
		int result = mypagedao.getselect_profile_pass(pass);	
		return String.valueOf(result);
		
	}
	
	@RequestMapping(value="/mypage/payment", method=RequestMethod.GET)
	public ModelAndView payment(HttpSession session) {
		ModelAndView mv = new ModelAndView();
		
		String sid = (String)session.getAttribute("semail");
		//String pid = mypagedao.getpayment(sid);
		
/*		System.out.println(sid+"sid");	*/
		mv.addObject("semail",sid);
		mv.setViewName("/mypage/payment");
		
		return mv;
	}
	
	@RequestMapping(value="/payment_update_proc", method=RequestMethod.POST)
	public String payment_update_proc(PaymentVO vo) {


		mypagedao.getpayment_update(vo);
		return "/mypage/payment_proc";
	}


	/**
	 * 내 후원현황 리스트 화면
	 * @param session
	 * @return
	 */
	@RequestMapping(value="/myfunding", method=RequestMethod.GET)
	public ModelAndView funding(HttpSession session) {
		ModelAndView mv = new ModelAndView();
		String email = (String)session.getAttribute("semail");
		
		email = "semibold@naver.com";
		
		mv.setViewName("/mypage/myfunding");
		mv.addObject("member", mypagedao.getProfile(email));
		mv.addObject("fundingList", fundingDAO.getFundingList(email));
		
		return mv;
	}
	
	/**
	 * 후원현황 상세
	 * @param funding_id
	 * @return
	 */
	@RequestMapping(value="/myfunding/detail", method=RequestMethod.GET)
	public ModelAndView funding_detail(String funding_id) {
		ModelAndView mv = new ModelAndView();
		
		mv.setViewName("/mypage/myfunding_detail");
		mv.addObject("fvo", fundingDAO.getFundingDetail(funding_id));
		mv.addObject("giftList", fundingDAO.getFundingGiftList(funding_id));
		
		return mv;
	}
	
	/**
	 * 후원현황 선물 변경하기 화면
	 * @param funding_id
	 * @return
	 */
	@RequestMapping(value="/myfunding/edit_gift", method=RequestMethod.GET)
	public ModelAndView funding_edit_reward(String funding_id, String pj_id) {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("/mypage/myfunding_edit");
		mv.addObject("edit_menu", "gift_select");
		mv.addObject("fundingGiftList", fundingDAO.getFundingGiftList(funding_id));
		mv.addObject("pvo", projectDAO.getContent(pj_id));
		mv.addObject("giftList", projectDAO.getGiftList(pj_id));
		
		return mv;
	}
	
	@RequestMapping(value="/myfunding/edit_payment", method=RequestMethod.GET)
	public ModelAndView funding_edit_payment(String funding_id) {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("/mypage/myfunding_edit");
		mv.addObject("edit_menu", "payment_edit");
		return mv;
	}
	@RequestMapping(value="/myfunding/cancel_funding", method=RequestMethod.GET)
	public ModelAndView funding_cancel(String funding_id) {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("/mypage/myfunding_edit");
		mv.addObject("edit_menu", "funding_cancel");
		return mv;
	}
	
	@RequestMapping(value="/myproject", method=RequestMethod.GET)
	public ModelAndView myproject(String rpage) {
		ModelAndView mv = new ModelAndView();
		MemberVO mvo = new MemberVO();
		ArrayList<ProjectVO> list = new ArrayList<ProjectVO>();
		String email = "yappihan@naver.com";
		int pj_count = 0;
		
		/** 페이징 처리 **/
		//페이징 처리 - startCount, endCount 구하기
		int startCount = 0;
		int endCount = 0;
		int pageSize = 6;	//한페이지당 게시물 수
		int reqPage = 1;	//요청페이지	
		int pageCount = 1;	//전체 페이지 수
		int dbCount = mypjDAO.execTotalCount(email);	//DB에서 가져온 전체 행수
		
		//총 페이지 수 계산
		if(dbCount % pageSize == 0){
			pageCount = dbCount/pageSize;
		}else{
			pageCount = dbCount/pageSize+1;
		}

		//요청 페이지 계산
		if(rpage != null){
			reqPage = Integer.parseInt(rpage);
			startCount = (reqPage-1) * pageSize+1;
	 		endCount = reqPage *pageSize;
		}else{
			startCount = 1;
			endCount = 6;
		}

		mvo = mypjDAO.getMyProfile(email);
		pj_count = mypjDAO.getProjectCount(email);
		list = mypjDAO.getProjectList(email, startCount, endCount);
		
		mv.addObject("mvo", mvo);
		mv.addObject("pj_count", pj_count);
		mv.addObject("list", list);
		mv.addObject("dbcount", dbCount);
		mv.addObject("rpage", reqPage);
		mv.addObject("pagesize", pageSize);
		mv.setViewName("/mypage/myproject");
		
		return mv;
	}
	
	@RequestMapping(value="/myproject/delivery", method=RequestMethod.GET)
	public ModelAndView myproject_delivery() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("/mypage/myproject_delivery");
		return mv;
	}
}
