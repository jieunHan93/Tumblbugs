package com.tumblbugs.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.tumblbugs.dao.PJUploadDAO;

@Controller
public class ProjectUploadController {

	@Autowired
	private PJUploadDAO PJUploadDao;
	
	@RequestMapping(value="/project_update_proc", method=RequestMethod.GET)
	public ModelAndView project_update_proc() {
		ModelAndView mv = new ModelAndView();
			
		mv.setViewName("/project/project_start_upload");
		
		return mv;
	}
	
	
	@RequestMapping(value="/project_start_upload", method=RequestMethod.GET)
	public ModelAndView project_start_upload(String pj_id) {
		ModelAndView mv = new ModelAndView();
		/*ProjectVO vo = PJUploadDao.getProjectContent(pj_id);*/
		
		/*if(pj_id != null && pj_id != "") {*/
			mv.setViewName("/project/project_start_upload");
			mv.addObject("pj_id", pj_id);
		/*}else {
			mv.setViewName("/error_page");
			mv.setViewName("/project/project_start_upload");
		}*/
		return mv;
	}
	
	@RequestMapping(value="/project_edit_proc", method=RequestMethod.GET)
	@ResponseBody
	public String project_table_proc(String pj_id, String pj_colname, String pj_val) {
		boolean result = false;
		String res = "";
		
		if(pj_id.equals("")) {
			pj_id = PJUploadDao.resultAddProject();	
		}
		result = PJUploadDao.resultUpdateinput(pj_id, pj_colname, pj_val);
		
		if(result) {
			res=pj_id;
		}else {
			res="redirect:/error_page";
		}
		
		return res;
	}
	
	
	@RequestMapping(value="/project_edit_title_proc", method=RequestMethod.GET)
	@ResponseBody
	public String project_edit_title_proc(String pj_id, String pj_title, String pj_stitle) {
		boolean result = false;
		String res = "";
		if(pj_id.equals("")) {
			pj_id = PJUploadDao.resultAddProject();	
		}
		
		result = PJUploadDao.resultUpdateTitle(pj_id, pj_title, pj_stitle);
		
		if(result) {
			res=pj_id;
		}else {
			res="redirect:/error_page";
		}
		
		return res;
	}
	
/*	@RequestMapping(value="/project_table_proc", method=RequestMethod.GET)
	public String project_table_proc(RedirectAttributes redirect) {
		String res ="";
		String pj_id = PJUploadDao.resultAddProject();	
			res = "redirect:/project_start_upload";
		
		return res;
	}*/
	
	
	@RequestMapping(value="/project_start_agreement", method=RequestMethod.GET)
	public String project_start_agreement() {
		return "/project/project_start_agreement";
	}
	
	@RequestMapping(value="/project_start", method=RequestMethod.GET)
	public String project_start() {
		
		return "/project/project_start";
	}
	
	/** 프로젝트 미리보기 **/
	@RequestMapping(value="/project_preview", method=RequestMethod.GET)
	public String project_preview(String pj_id) {
		return "/project/project_preview";
	}
	
	@RequestMapping(value="/project_preview/story", method=RequestMethod.GET)
	public String project_content_story() {
		return "/project/project_preview";
	}
	
	@RequestMapping(value="/project_preview/community", method=RequestMethod.GET)
	public String project_content_community() {
		return "/project/project_preview";
	}
	
	@RequestMapping(value="/project_preview/fundingInfo", method=RequestMethod.GET)
	public String project_content_fundingInfo() {
		return "/project/project_preview";
	}
}
