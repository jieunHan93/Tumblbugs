package com.tumblbugs.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.tumblbugs.dao.CommunityDAO;
import com.tumblbugs.dao.ProjectDAO;
import com.tumblbugs.vo.CommunityVO;

@Controller
public class ProjectContentController {
	
	@Autowired
	private CommunityDAO communityDAO;
	
	@Autowired
	private ProjectDAO projectDAO;
	
	@RequestMapping(value="/project_content", method=RequestMethod.GET)
	public ModelAndView project_content(String pj_id, String tab) {
		ModelAndView mv = new ModelAndView();
		
		pj_id = "PJ00001";
		
		mv.setViewName("/project/project_content_main");
		mv.addObject("vo", projectDAO.getContent(pj_id));
		mv.addObject("giftList", projectDAO.getGiftList(pj_id));
		
		if(tab != null) {
			mv.addObject("tab", tab);
			
			if(tab.equals("community")) {
				mv.addObject("list", communityDAO.getList(pj_id));
			}
		}
		
		
		return mv;
	}
	
	
	@RequestMapping(value="/project_content/community", method=RequestMethod.GET)
	public ModelAndView project_content_community(String pj_id) {
		ModelAndView mv = new ModelAndView();
		
		mv.setViewName("/project/project_content_main");
		mv.addObject("list", communityDAO.getList("PJ1"));	//나중에 pj_id 받아오는 걸로 수정
		
		return mv;
	}
	
	@RequestMapping(value="/sendMessage", method=RequestMethod.GET)
	public String send_message() {
		return "/project/send_message";
	}
	
	
	/** 커뮤니티 **/
	@RequestMapping(value="/community_write_proc", method=RequestMethod.POST)
	public String community_write(CommunityVO vo) {
		String resPage = "";
		
		if(communityDAO.getResultWrite(vo) != 0) {
			resPage = "redirect:/project_content";
		} else {
			//에러페이지
		}
		
		return resPage;
	}
	
	/** 프로젝트 미리보기 **/
	@RequestMapping(value="/project_preview", method=RequestMethod.GET)
	public ModelAndView project_preview(String pj_id, String tab) {
		ModelAndView mv = new ModelAndView();
		
		pj_id = "PJ00001";
		
		mv.setViewName("/project/project_preview");
		mv.addObject("vo", projectDAO.getContent(pj_id));
		mv.addObject("giftList", projectDAO.getGiftList(pj_id));
		
		if(tab != null) {
			mv.addObject("tab", tab);
			
			if(tab.equals("community")) {
				mv.addObject("list", communityDAO.getList(pj_id));
			}
		}
		
		
		return mv;
	}
}
