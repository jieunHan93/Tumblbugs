package com.tumblbugs.controller;

import java.io.File;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.tumblbugs.dao.PJUploadDAO;
import com.tumblbugs.vo.ProjectVO;

@Controller
public class ProjectUploadController {

	@Autowired
	private PJUploadDAO PJUploadDao;
	
	@RequestMapping(value = "/multipartUpload.do", method = RequestMethod.POST) 
	@ResponseBody
	public String multipartUpload(ProjectVO vo, HttpServletRequest request) throws Exception {
System.out.println(vo.getPj_cimg().getOriginalFilename());
		
		if(vo.getPj_cimg().getOriginalFilename() != null){
			//파일 존재
			String root_path = request.getSession().getServletContext().getRealPath("/");
			String attach_path = "\\resources\\upload\\";
				
			//rfname 중복방지 처리
			UUID uuid = UUID.randomUUID();
			
			vo.setPj_img(vo.getPj_cimg().getOriginalFilename());
			vo.setPj_simg(uuid+"_"+vo.getPj_cimg().getOriginalFilename());
			
			//DB저장
			boolean result = false;
			result= PJUploadDao.resultUpdateFile(vo);
			
			if(result) {
				//DB저장 완료 후 폴더에 저장하기
				File file = new File(root_path + attach_path + uuid +"_"+vo.getPj_cimg().getOriginalFilename());
				vo.getPj_cimg().transferTo(file);
			}
		}else{
			//파일 없음
			System.out.println("선택 파일 없음~");
		}
		
		return "success";
	}
	

	
	
	/**
	 * 프로젝트 update 프로세트
	 * @return
	 */
	@RequestMapping(value="/project_update_proc", method=RequestMethod.GET)
	public ModelAndView project_update_proc() {
		ModelAndView mv = new ModelAndView();
			
		mv.setViewName("/project/project_start_upload");
		
		return mv;
	}
	
	/**
	 * 프로젝트 업로드 페이지
	 * @param pj_id
	 * @return
	 */
	@RequestMapping(value="/project_start_upload", method=RequestMethod.GET)
	public ModelAndView project_start_upload(String pj_id) {
		ModelAndView mv = new ModelAndView();
		
			mv.setViewName("/project/project_start_upload");
			mv.addObject("pj_id", pj_id);
		return mv;
	}
	
	/**
	 * 프로젝트 업로드 페이지 -> member 테이블 정보 수정
	 * @param pj_colname, pj_val
	 * @return
	 */
	@RequestMapping(value="/project_member_proc", method=RequestMethod.GET)
	@ResponseBody
	public void project_member_proc(String pj_colname, String pj_val) {
		boolean result = false;
		result = PJUploadDao.resultUpdatemember(pj_colname, pj_val);

		/*if(result) {
			
		}else {
			res="redirect:/error_page";
		}*/
		
	}
	
	/**
	 * 프로젝트 업로드 페이지 -> date 형식 업데이트
	 * @param pj_id, pj_colname, pj_val
	 * @return
	 */
	@RequestMapping(value="/project_date_proc", method=RequestMethod.GET)
	@ResponseBody
	public String project_date_proc(String pj_id, String pj_colname, String pj_val) {
		boolean result = false;
		String res = "";	
		if(pj_id.equals("")) {
			pj_id = PJUploadDao.resultAddProject();	
		}
		result = PJUploadDao.resultUpdatedate(pj_id, pj_colname, pj_val);
		
		if(result) {
			res=pj_id;
		}else {
			res="redirect:/error_page";
		}
		
		return res;
	}
	
	/**
	 * 프로젝트 업로드 페이지 -> varchar2 형식 업데이트
	 * @param pj_id, pj_colname, pj_val
	 * @return
	 */
	@RequestMapping(value="/project_edit_proc", method=RequestMethod.GET)
	@ResponseBody
	public String project_edit_proc(String pj_id, String pj_colname, String pj_val) {
		boolean result = false;
		String res = "";	
		if(pj_id.equals("")) {
			pj_id = PJUploadDao.resultAddProject();	
		}
		result = PJUploadDao.resultUpdateinput(pj_id, pj_colname, pj_val);
		
		if(result) {
			res=pj_id;
		}else {
			res="redirect:/error_page";
		}
		
		return res;
	}
	
	/**
	 * 프로젝트 업로드 페이지 -> 제목, 짧은 제목 업데이트
	 * @param pj_id, pj_title, pj_stitle
	 * @return
	 */
	@RequestMapping(value="/project_edit_title_proc", method=RequestMethod.GET)
	@ResponseBody
	public String project_edit_title_proc(String pj_id, String pj_title, String pj_stitle) {
		boolean result = false;
		String res = "";
		if(pj_id.equals("")) {
			pj_id = PJUploadDao.resultAddProject();	
		}
		
		result = PJUploadDao.resultUpdateTitle(pj_id, pj_title, pj_stitle);
		
		if(result) {
			res=pj_id;
		}else {
			res="redirect:/error_page";
		}
		
		return res;
	}

	/**
	 * 프로젝트 정책 안내 페이지
	 * @return
	 */
	@RequestMapping(value="/project_start_agreement", method=RequestMethod.GET)
	public String project_start_agreement() {
		return "/project/project_start_agreement";
	}
	
	/**
	 * 프로젝트 시작 소개 페이지
	 * @return
	 */
	@RequestMapping(value="/project_start", method=RequestMethod.GET)
	public String project_start() {
		
		return "/project/project_start";
	}
	
	/** 프로젝트 미리보기 **/
	@RequestMapping(value="/project_preview", method=RequestMethod.GET)
	public String project_preview(String pj_id) {
		return "/project/project_preview";
	}
	
	@RequestMapping(value="/project_preview/story", method=RequestMethod.GET)
	public String project_content_story() {
		return "/project/project_preview";
	}
	
	@RequestMapping(value="/project_preview/community", method=RequestMethod.GET)
	public String project_content_community() {
		return "/project/project_preview";
	}
	
	@RequestMapping(value="/project_preview/fundingInfo", method=RequestMethod.GET)
	public String project_content_fundingInfo() {
		return "/project/project_preview";
	}
}
