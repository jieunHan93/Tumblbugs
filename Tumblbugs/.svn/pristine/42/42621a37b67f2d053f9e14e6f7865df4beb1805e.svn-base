package com.tumblbugs.dao;


import java.util.ArrayList;
import java.util.List;

import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.tumblbugs.vo.MemberVO;

@Repository
public class RegDAO {
	
	@Autowired
	private SqlSessionTemplate sqlSession; 	
	private String namespace = "mapper.member";	
	/** 회원가입 **/
	public int getResultReg(MemberVO vo) {
		return sqlSession.insert(namespace + ".reg" , vo);		
	}
	
	/** 회원 전체 리스트 **/
	public ArrayList<MemberVO> getMemberList() {
		List list = sqlSession.selectList(namespace + ".list");
		
		return (ArrayList<MemberVO>)list;
	}
	
	/** 회원 상세 정보 **/
	public MemberVO getMemberInfo(String email) {
		return sqlSession.selectOne(namespace + ".content", email);
	}
	
	/** 회원 탈퇴 **/
	public int getResultUnreg(String email) {
		return sqlSession.delete(namespace + ".unreg", email);
	}
	
	
	
	/** 인증다오 **/
	

	    public MemberVO authenticate(String str) throws Exception {
	        return sqlSession.selectOne(namespace+".checkdupl", str);
	    }
	 
	    //해당 email에 인증 키 업데이트
	
	    public void createAuthKey(String memberEmail, String memberAuthKey) throws Exception {
	        MemberVO vo = new MemberVO();
	        vo.setUse_yn(memberAuthKey);
	        vo.setEmail(memberEmail);
	        sqlSession.update(namespace + ".createAuthKey", vo);
	    }
	    //이메일 인증 코드 확인
	    public MemberVO chkAuth(MemberVO vo) throws Exception {
	        return sqlSession.selectOne(namespace + ".chkAuth", vo);
	    }
	    //인증 후 계정 활성화
	    public void userAuth(MemberVO vo) throws Exception {  
	    	sqlSession.update(namespace + ".userAuth", vo);

	    }

		public void successAuth(MemberVO vo) {
			
			
		}

		public void insertUser(MemberVO vo) {
	
			
		}

}
