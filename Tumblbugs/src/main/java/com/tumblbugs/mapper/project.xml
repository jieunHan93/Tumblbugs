<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.project">
	<select id="admin_list" parameterType="map" resultType="com.tumblbugs.vo.ProjectVO">
		select rownum rno, pj_id, pj_title, name, to_char(pj_check_request_date, 'yyyy/mm/dd') pj_check_request_date, pj_check_yn, pj_start_date, pj_end_date, pj_price, total_funding_price, achievement_rate
		from (select p.pj_id, p.pj_title, m.name, pj_check_request_date, pj_check_yn,
				    to_char(pj_start_date, 'yyyy/mm/dd') pj_start_date, to_char(pj_end_date, 'yyyy/mm/dd') pj_end_date,
				    to_char(pj_price,'999,999,999,999') pj_price, to_char(nvl(f.total_funding_price,0), '999,999,999,999') total_funding_price,
				    trunc((nvl(f.total_funding_price, 0)/p.pj_price)*100) achievement_rate
				from tum_project p, tum_member m, tum_project_bill b,
					(select pj_id, sum(total_funding_price) total_funding_price from tum_funding group by pj_id) f
				WHERE P.EMAIL = M.EMAIL
				and p.pj_id = b.pj_id(+)
				AND p.pj_id = f.PJ_ID(+)
				AND P.pj_check_request_date is not null
				<choose>
					<when test="category == 'check'">
						and p.pj_check_yn is null
					</when>
					<when test="category == 'bill'">
						<![CDATA[
						and pj_price <= total_funding_price
						and sysdate > p.pj_end_date + 7
						and b.pj_id is null
						]]>
					</when>
				</choose>
		    	order by pj_check_request_date)
	</select>

	<select id="admin_content" parameterType="String" resultType="com.tumblbugs.vo.ProjectVO">
		SELECT P.PJ_ID, P.PJ_CATEGORY, P.PJ_TITLE, P.PJ_SIMG, p.pj_summary, p.pj_addr, p.pj_tag, TO_CHAR(PJ_PRICE,'999,999,999,999') PJ_PRICE,
			to_char(pj_start_date, 'yyyy-mm-dd') pj_start_date, TO_CHAR(PJ_END_DATE, 'yyyy-mm-dd') PJ_END_DATE, TO_CHAR(PJ_END_DATE + 7, 'yyyy-mm-dd') PJ_PAY_END_DATE,
			TO_CHAR(PJ_END_DATE + 16, 'yyyy-mm-dd') PJ_BILL_DATE, P.PJ_STORY, P.PJ_REFUND, P.PJ_CLASS, p.pj_email, p.pj_account_type,
			p.pj_account_name, p.pj_account_id, p.pj_phone, p.pj_bank, substr(p.pj_account_number, -4) pj_account_number, editor_recommend,
			M.NAME, M.PROFILE_SIMG, M.INTRO, p.pj_check_yn
		FROM TUM_PROJECT P, TUM_MEMBER M
		WHERE P.EMAIL = M.EMAIL
		AND P.PJ_ID = #{pj_id}
	</select>
	
	<select id="adminTotalCount" resultType="int">
		select count(*) from tum_project where pj_check_request_date is not null
	</select>
	
	<select id="adminCheckRequestCount" resultType="int">
		select count(*) from tum_project where pj_check_request_date is not null and pj_check_yn is null
	</select>
	
	<select id="adminBillCount" resultType="int">
		<![CDATA[
			select count(*)
			from tum_project p,(select pj_id, sum(total_funding_price) total_funding_price from tum_funding group by pj_id) f, tum_project_bill b
			WHERE p.pj_id = f.PJ_ID(+)
		    and p.pj_id = b.pj_id(+)
			and p.pj_price <= f.total_funding_price
		    and sysdate > p.pj_end_date + 7
		    and b.pj_id is null
		]]>
	</select>
	
	<update id="project_check_yn" parameterType="map">
		update tum_project
		set pj_check_yn = #{checkResult}, pj_check_date = sysdate
		<if test="checkResult == 'n'.toString()">
			, pj_reject = #{pj_reject}
		</if>
		where pj_id = #{pj_id}
	</update>
	
	<select id="preview_content" parameterType="String" resultType="com.tumblbugs.vo.ProjectVO">
		SELECT P.PJ_ID, p.email, P.PJ_CATEGORY, p.pj_addr, P.PJ_TITLE, P.PJ_SIMG, TO_CHAR(PJ_PRICE,'999,999,999,999') PJ_PRICE, TO_CHAR(PJ_END_DATE + 1, 'yyyy"년" fmmm"월" dd"일"') PJ_PAY_DATE, 
			TO_CHAR(NVL(F.TOTAL_FUNDING_PRICE,0), '999,999,999,999') total_funding_price, trunc((NVL(F.TOTAL_FUNDING_PRICE,0)/P.PJ_PRICE)*100) achievement_rate,
			TRUNC(P.PJ_END_DATE - SYSDATE - 1) remaining_days, TO_CHAR(NVL(F.SPONSOR_COUNT,0),'999,999,999') total_sponsor_count,
			NVL(C.COMMUNITY_COUNT,0) COMMUNITY_COUNT, P.PJ_STORY, P.PJ_REFUND, P.PJ_CLASS
		FROM TUM_PROJECT P,
			(SELECT PJ_ID, COUNT(COMMUNITY_ID) COMMUNITY_COUNT FROM TUM_COMMUNITY GROUP BY PJ_ID) C,
			(SELECT PJ_ID, SUM(TOTAL_FUNDING_PRICE) TOTAL_FUNDING_PRICE, COUNT(FUNDING_ID) SPONSOR_COUNT FROM TUM_FUNDING GROUP BY PJ_ID) F
		WHERE P.PJ_ID = C.PJ_ID(+)
		AND P.PJ_ID = F.PJ_ID(+)
		AND P.PJ_ID = #{pj_id}
	</select>
	
	<select id="content" parameterType="String" resultType="com.tumblbugs.vo.ProjectVO">
		SELECT P.PJ_ID, p.email, p.pj_summary, P.PJ_CATEGORY, p.pj_addr, P.PJ_TITLE, P.PJ_SIMG, TO_CHAR(PJ_PRICE,'999,999,999,999') PJ_PRICE, TO_CHAR(PJ_END_DATE + 1, 'yyyy"년" fmmm"월" dd"일"') PJ_PAY_DATE, 
			TO_CHAR(NVL(F.TOTAL_FUNDING_PRICE,0), '999,999,999,999') total_funding_price, trunc((NVL(F.TOTAL_FUNDING_PRICE,0)/P.PJ_PRICE)*100) achievement_rate,
			TRUNC(P.PJ_END_DATE - SYSDATE - 1) remaining_days, TO_CHAR(NVL(F.SPONSOR_COUNT,0),'999,999,999') total_sponsor_count,
			NVL(C.COMMUNITY_COUNT,0) COMMUNITY_COUNT, P.PJ_STORY, P.PJ_REFUND, P.PJ_CLASS
		FROM TUM_PROJECT P,
			(SELECT PJ_ID, COUNT(COMMUNITY_ID) COMMUNITY_COUNT FROM TUM_COMMUNITY GROUP BY PJ_ID) C,
			(SELECT PJ_ID, SUM(TOTAL_FUNDING_PRICE) TOTAL_FUNDING_PRICE, COUNT(FUNDING_ID) SPONSOR_COUNT FROM TUM_FUNDING GROUP BY PJ_ID) F
		WHERE P.PJ_ID = C.PJ_ID(+)
		AND P.PJ_ID = F.PJ_ID(+)
		AND P.PJ_ID = #{pj_id}
		AND P.PJ_CHECK_YN = 'y'
	</select>
	
	<select id="story" parameterType="String" resultType="String">
		select pj_story from tum_project where pj_id=#{pj_id}
	</select>
	
	<select id="pj_addr" parameterType="String" resultType="String">
		select pj_addr from tum_project where pj_id=#{pj_id}
	</select>
	
	<select id="pj_id" parameterType="String" resultType="String">
		select pj_id from tum_project where pj_addr=#{pj_addr}
	</select>
	
	<select id="pj_title" parameterType="String" resultType="String">
		select pj_title from tum_project where pj_id=#{pj_id}
	</select>
	
	<select id="gift" parameterType="String" resultType="com.tumblbugs.vo.GiftVO">
		select g.pj_id, g.gift_id, g.gift_title, to_char(g.gift_price, '999,999,999') gift_price, g.gift_sort_num,
			to_char(g.gift_delivery_date, 'yyyy"년" fmmm"월" dd"일"') gift_delivery_date, g.gift_delivery_yn,
			g.gift_max_count, nvl(fg.gift_sold_count,0) gift_sold_count, (g.gift_max_count - nvl(fg.gift_sold_count,0)) gift_remaining_count,
      		nvl(item_option_count, 0) item_option_count
		from tum_gift g, (select gift_id, count(*) item_option_count from tum_item where item_option_type != '1' group by gift_id ) i,
			(select gift_id, sum(gift_quantity) gift_sold_count from tum_funding_gift group by gift_id) fg
		where g.gift_id = i.gift_id(+)
    	and g.gift_id = fg.gift_id(+)
		and g.pj_id = #{pj_id}
		order by gift_sort_num
	</select>
	
	<select id="item" parameterType="String" resultType="com.tumblbugs.vo.ItemVO">
		select item_id, item_title, item_count, item_option_type, item_option
		from tum_item
		where gift_id=#{gift_id}
		and item_check='y'
		order by item_id
	</select>
	
	<update id="hits" parameterType="String">
		update tum_project set pj_hits = pj_hits + 1 where pj_id = #{pj_id}
	</update>
	
	<select id="fundingYn" parameterType="map" resultType="int">
		select count(*) from tum_funding where pj_id = #{pj_id} and email = #{email}
	</select>
	
	<update id="editor_recommend" parameterType="String">
		update tum_project set editor_recommend='1' where pj_id=#{pj_id}
	</update>
	
	<update id="editor_recommend_cancel" parameterType="String">
		update tum_project set editor_recommend=null where pj_id=#{pj_id}
	</update>
</mapper>