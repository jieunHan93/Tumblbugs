<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.payment">
	<select id="paymentList" parameterType="String" resultType="com.tumblbugs.vo.PaymentVO">
		select payment_id, payment_method, card_company, substr(card_number, -4) card_number, bank, substr(account_number, -4) account_number
		from tum_payment
		where email = #{email}
		order by payment_date desc
	</select>
	
	<select id="paymentContent" parameterType="String" resultType="com.tumblbugs.vo.PaymentVO">
		select payment_id, payment_method, card_company, substr(card_number, -4) card_number, bank, substr(account_number, -4) account_number
		from tum_payment
		where payment_id = #{payment_id}
	</select>
	
	<insert id="cardRegist" parameterType="com.tumblbugs.vo.PaymentVO">
		insert into tum_payment(payment_id, email, payment_method, card_company, card_number, card_valid_date, card_pass, card_birth, payment_date)
		values('PM' || LPAD(tum_payment_sequ.nextval, 5, 0), #{email}, '01', #{card_company}, #{card_number}, #{card_valid_date}, #{card_pass},
		#{card_birth}, sysdate)
	</insert>
	
	<insert id="bankRegist" parameterType="com.tumblbugs.vo.PaymentVO">
		insert into tum_payment(payment_id, email, payment_method, bank, account_number, account_name, account_birth, payment_date)
		values('PM' || LPAD(tum_payment_sequ.nextval, 5, 0), #{email}, '02', #{bank}, #{account_number}, #{account_name}, #{account_birth}, sysdate)
	</insert>
	
	<select id="newPaymentId" parameterType="String" resultType="String">
		select max(payment_id) from tum_payment where email = #{email}
	</select>
	
	<select id="payment" parameterType="String" resultType="java.lang.String">
		select payment_id from tum_payment where email=#{sid}
	</select> 

	<insert id="payment_insert_proc" parameterType="com.tumblbugs.vo.PaymentVO" >	
		insert into tum_payment VALUES(
			'PM' || LPAD(tum_payment_sequ.nextval, 5, 0),
			#{email},
			#{payment_method},
      		#{card_company},
      		#{card_number},
      		#{card_valid_date},
      		#{card_pass},
      		#{card_birth},
      		#{bank},
      		#{account_number},
      		#{account_name},
      		#{account_birth},
      		sysdate)
	</insert>
	
	<delete id="payment_delete" parameterType="java.lang.String" >	
  		DELETE FROM tum_payment WHERE PAYMENT_ID = #{payment_id}
	</delete>
	
	<select id="paymentDeleteCheck" parameterType="String" resultType="int">
		select count(*) from tum_funding where payment_id = #{payment_id} and payment_complete_yn = 'n'
	</select>
	
	<select id="TotalCount" resultType="int">
		select count(*) from tum_payment
	</select>
	
	<select id="payment_info" parameterType="map" resultType="com.tumblbugs.vo.PaymentVO" >
	
	<!-- SELECT * from (select ROWNUM rno, payment_id,email,payment_method,card_company,card_number,
	card_valid_date,card_pass,bank,account_number,account_name,account_birth,
	payment_date,card_birth 
	from (select payment_id,email,payment_method,card_company,card_number,
	card_valid_date,card_pass,bank,account_number,account_name,account_birth,
	payment_date,card_birth 
	from  tum_payment order by rownum asc)) 
	where rno BETWEEN #{startCount} AND #{endCount} -->
	
	  SELECT * from (select ROWNUM rno, payment_id,email,payment_method,card_company,card_number,
	card_valid_date,card_pass,bank,account_number,account_name,account_birth,
	payment_date,card_birth from (select payment_id,email,trim(payment_method) payment_method,card_company,card_number,
	card_valid_date,card_pass,bank,account_number,account_name,account_birth,
	payment_date,card_birth from  tum_payment  where email = #{email} order by rownum asc)) 
  	where rno BETWEEN #{startCount} AND #{endCount}
	
	</select>
	
	<select id="paymentInfo" parameterType="String" resultType="String">
		select case
		  when payment_method = '01' then '카드(' || card_company || '/' || substr(card_number, -4) || ')'
		  when payment_method = '02' then '계좌(' || bank || '/' || substr(account_number, -4) || ')'
		  end as payment_info
		from tum_payment
		where payment_id=#{payment_id}
	</select>
</mapper>